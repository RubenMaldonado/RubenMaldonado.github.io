<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>Ruben Maldonado</title><description>From zero to hero, my iOS career journey</description><link>https://RubenMaldonado.github.io</link><language>en</language><lastBuildDate>Sun, 20 Sep 2020 20:45:49 -0500</lastBuildDate><pubDate>Sun, 20 Sep 2020 20:45:49 -0500</pubDate><ttl>250</ttl><atom:link href="https://RubenMaldonado.github.io/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://RubenMaldonado.github.io/apps/pathience-privacy-policy</guid><title>Privacy Policy</title><description>Pathience Privacy Policy</description><link>https://RubenMaldonado.github.io/apps/pathience-privacy-policy</link><pubDate>Sun, 20 Sep 2020 23:00:00 -0500</pubDate><content:encoded><![CDATA[<h1>Privacy Policy</h1><p>This policy applies to all information collected or submitted on our apps for iPhone and any other devices and platforms.</p><h2>Information we collect</h2><h3><strong>Technical basics</strong></h3><p>If you enable notifications, we must store a token to send them. We <strong>never</strong> use notifications for marketing.</p><h3><strong>iCloud</strong></h3><p>Our apps stores some of your data in Apple’s iCloud service, to enable some sync features between all devices signed into your Apple ID.</p><h2>Information usage</h2><p>We do not share personal information with outside parties except to the extent necessary to accomplish our apps functionality.</p><p>We may disclose your information in response to subpoenas, court orders, or other legal requirements; to exercise our legal rights or defend against legal claims; to investigate, prevent, or take action regarding illegal activities, suspected fraud or abuse, violations of our policies; or to protect our rights and property.</p><p>In the future, we may sell to, buy, merge with, or partner with other businesses. In such transactions, user information may be among the transferred assets.</p><h2>Security</h2><p>We implement a variety of security measures to help keep your information secure.</p><h2>Accessing, changing, or deleting information</h2><p>You may access or change your information or delete your account from Pathience iOS app.</p><p>Pathience may delete your information at any time and for any reason, such as technical needs, legal concerns, abuse prevention, removal of idle accounts, data loss, or any other reason.</p><h2>Third-party links and content</h2><p>Pathience displays links and content from third-party sites. These have their own independent privacy policies, and we have no responsibility or liability for their content or activities.</p><h2>California Online Privacy Protection Act Compliance</h2><p>We comply with the California Online Privacy Protection Act. We therefore will not distribute your personal information to outside parties without your consent.</p><h2>Children’s Online Privacy Protection Act Compliance</h2><p>We never collect or maintain information at our apps or website from those we actually know are under 13, and no part of our website is structured to attract anyone under 13.</p><h2>Information for European Union Customers</h2><p>By using Pathience and providing your information, you authorize us to collect, use, and store your information outside of the European Union.</p><h2>International Transfers of Information</h2><p>Information may be processed, stored, and used outside of the country in which you are located. Data privacy laws vary across jurisdictions, and different laws may be applicable to your data depending on where it is processed, stored, or used.</p><h2>Your Consent</h2><p>By using our site or apps, you consent to our privacy policy.</p><h2>Contacting Us</h2><p>If you have questions regarding this privacy policy, you may email <a href="mailto:ruben@maldonadotena.com">ruben@maldonadotena.com</a>. Please note that account deletion should be done within the Pathience app, not via email requests, for security reasons.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://RubenMaldonado.github.io/articles/logging-in-iOS-using-OS-log</guid><title>Logging in iOS using OS log</title><description>Logging in iOS using OS log</description><link>https://RubenMaldonado.github.io/articles/logging-in-iOS-using-OS-log</link><pubDate>Sun, 20 Sep 2020 22:00:00 -0500</pubDate><content:encoded><![CDATA[<h1>Logging in iOS using OS log</h1><p>Once I started to play with my first app, I found myself printing into the console a lot, just to try to understand what was happening. This always felt wrong and until I had an "aha" moment by watching the presentation <a href="https://developer.apple.com/videos/play/wwdc2020/10168/#:~:text=Meet%20the%20latest%20generation%20of,data%20%E2%80%94%20all%20without%20sacrificing%20performance.">Explore logging in Swift</a> at WWDC20. This opened my eyes so I started using OS log everywhere.</p><p>Here you have a simple snippet that I use everywhere:</p><pre><code><span class="comment">//Import this libaray</span> 
<span class="keyword">import</span> os 
<span class="comment">//Create a global logger object 
//Use the category to identify the struct/class/view.</span>
<span class="keyword">let</span> logger = <span class="type">Logger</span>(subsystem: <span class="string">"com.maldonadotena.pathience"</span>, category: <span class="string">"datarepository"</span>) 
<span class="comment">//Log at any part of the application</span>
<span class="keyword">let</span> filename:  <span class="type">String</span> = <span class="string">"some file name that doesnt exist.txt"</span>
logger.<span class="call">log</span>(<span class="string">"Couldn't find the file</span> \(filename, privacy: .<span class="dotAccess">public</span>)<span class="string">"</span>)
</code></pre><p>The official documentation is extensive, you can take a look here: <a href="https://developer.apple.com/documentation/os/logging">Logging</a> . But if you want just a copy and paste solution, here you have it, ready to use!.</p><p>Don't worry, be <a href="https://rubenmaldonado.github.io/apps/pathience-app/">pathient</a>!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://RubenMaldonado.github.io/articles/beginners-guide-to-publish</guid><title>Beginners Guide to Publish</title><description>Begginer Guide to Publish</description><link>https://RubenMaldonado.github.io/articles/beginners-guide-to-publish</link><pubDate>Sun, 20 Sep 2020 20:00:00 -0500</pubDate><content:encoded><![CDATA[<h1>Beginners Guide to Publish</h1><p>I just started my journey into the iOS development world. I heard in a podcast that a really useful way to retain and improve your knowledge is by sharing it.</p><p>So surprise! I decided to be original and start a blog. After reviewing several options like WordPress, Squarespace, and even host it by myself I heard about John Sundell and Publish. The premise is that you can generate your static HTML website/blog using a Swift package. So a blog about learning iOS development and Swift that it created using Swift was the perfect first challenge in my journey.</p><p>At the end of this post, you will find all the resources that I used to learn about it.</p><h2>Pre-Requisites</h2><ul><li><a href="https://www.apple.com/shop/buy-mac/macbook-pro/16-inch">MacBook Pro</a> (This is the model that I use)</li><li><a href="https://support.apple.com/guide/terminal/open-or-quit-terminal-apd5265185d-f365-44cb-8b09-71a064a42125/mac">Terminal</a></li><li><a href="https://github.com/join?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home">Github account</a></li><li><a href="https://developer.apple.com/xcode/">Xcode 12</a></li></ul><h2>Step 1: Install publish cli</h2><p>Let's create a folder where we are going to manage our site, download the publish package, and use the command-line tool to create our first site.</p><pre><code>$ mkdir myPublishWebsite
$ cd myPublishWebsite
$ git clone https://github.<span class="property">com</span>/<span class="type">JohnSundell</span>/<span class="type">Publish</span>.<span class="property">git</span>
$ cd <span class="type">Publish</span>
$ make
</code></pre><p>At this point, you will have the publish console API ready to help you to create your site. The main commands are the following:</p><ul><li>publish new -&gt; Create new project</li><li>publish generate -&gt; Generate the html output</li><li>publish run -&gt; Run your website locally</li><li>publish deploy -&gt; Deploy your website to the internet</li></ul><p>We will use them in the following sections.</p><h2>Step 2: Create your project folder and initialize git</h2><pre><code>$ mkdir publishblog
$ cd publishblog
$ git <span class="keyword">init</span>
$ git checkout -b author
</code></pre><p>The following will create a new folder called publishblog, this folder will contain your publish package and all the content of your blog. Normally in git, your main branch is "master" and you use other branches to do temporary work after merging them back to master. In our case, our git logic will work a little bit differently.</p><ul><li>Your main branch will be the one just created called "author". In this branch, you will maintain all your content and the work that is not ready to be published.</li><li>Once you're ready to publish, we will use the "deploy" command. The deploy command will generate the static content in the "master" then send it to github.com.</li></ul><p>We are going to use <a href="https://pages.github.com/">GitHub pages</a> pages to get free hosting of our site, one of the restrictions of GitHub pages is that it will use the content of the master branch to host the source files.</p><h2>Step 3: Create and run our Publish project</h2><pre><code>$ publish new
$ publish generate
$ publish run
</code></pre><p>Command overview: - "publish new" command will generate a new Publish skeleton project, with the most basic infrastructure. - "publish generate" command will transform your markdown text files and generate the static html content for your site, your output. - "publish run" command will create a local server where you can pre-visualize your content, just open http://localhost:8000 in your web browser.</p><p>The result will be a starter website like this: <img src="https://RubenMaldonado.github.io/images/20200919_publish_howtosetup_01_localhost.png" alt="localhost"/></p><h2>Step 4: Prepare for deployment to GitHub pages</h2><p>First let's open our package in Xcode using the following command:</p><pre><code>$ <span class="keyword">open</span> <span class="type">Package</span>.<span class="property">swift</span>
</code></pre><p>Once Xcode is open navigate in the left bar and open the file called main.swift <img src="https://RubenMaldonado.github.io/images/20200919_publish_howtosetup_02_xcode.png" alt="xcode package"/></p><p>Here is how your main.swift file should look like:</p><pre><code><span class="keyword">import</span> Foundation
<span class="keyword">import</span> Publish
<span class="keyword">import</span> Plot

<span class="comment">// This type acts as the configuration for your website.</span>
<span class="keyword">struct</span> Publishblog: <span class="type">Website</span> {
    <span class="keyword">enum</span> SectionID: <span class="type">String</span>, <span class="type">WebsiteSectionID</span> {
        <span class="comment">// Add the sections that you want your website to contain here:</span>
        <span class="keyword">case</span> posts
    }

    <span class="keyword">struct</span> ItemMetadata: <span class="type">WebsiteItemMetadata</span> {
        <span class="comment">// Add any site-specific metadata that you want to use here.</span>
    }

    <span class="comment">// Update these properties to configure your website:</span>
    <span class="keyword">var</span> url = <span class="type">URL</span>(string: <span class="string">"https://publishblog.github.io"</span>)!
    <span class="keyword">var</span> name = <span class="string">"Publishblog"</span>
    <span class="keyword">var</span> description = <span class="string">"A description of Publishblog"</span>
    <span class="keyword">var</span> language: <span class="type">Language</span> { .<span class="dotAccess">english</span> }
    <span class="keyword">var</span> imagePath: <span class="type">Path</span>? { <span class="keyword">nil</span> }
}

<span class="comment">// This will generate your website using the built-in Foundation theme:</span>
<span class="keyword">try</span> <span class="type">Publishblog</span>().<span class="call">publish</span>(withTheme: .<span class="dotAccess">foundation</span>,
                          deployedUsing: .<span class="call">gitHub</span>(<span class="string">"publishblog/publishblog.github.io"</span>, useSSH: <span class="keyword">false</span>))


</code></pre><p>One remark, in order to get success using github pages as your hosting provider your repository MUST be named according the convention "gitaccount/gitaccount.github.io", it will not work if is not spelled correctly. You can find detailed instructions on how to proper configure GitHubs pages <a href="https://guides.github.com/features/pages/">here</a>.</p><h2>Step 5: Deploy to GitHub pages</h2><pre><code>$ git add .
$ git commit -m <span class="string">"Initial commit"</span> 
$ git remote add origin https://github.<span class="property">com</span>/publishblog/publishblog.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span>
$ git push origin author
$ publish deploy
</code></pre><p>And if everything is configured correctly, you should be able to open your brand new website with the default link <a href="https://publishblog.github.io/">https://publishblog.github.io/</a>.</p><p>And that's it!</p><h2>Reference Links</h2><p>I didn’t know what was a Swift package when I started, I truly started from scratch, all the following resources were awesome but for some reason not so easy to find.</p><ul><li><a href="https://briancoyner.github.io/articles/2020-02-25-cocoaheads_publish_notes/">8 Tips To Help You Get Started With Publish</a></li><li><a href="https://www.russellgordon.ca/tutorials/creating-a-custom-theme-using-publish/">Creating a custom theme using Publish</a></li><li><a href="https://github.com/JohnSundell/Publish">Publish in Github</a></li></ul><h2>Conclusions</h2><p>Getting all these steps was complicated for me, before trying this I didn't know what were the Swift packages, Github pages, plot, and other fascinating resources that I will describe in future posts. But documenting back all these steps made me feel more comfortable on how to initiate quickly with a brand new static website whenever I need it. Hope it helps.</p><p>Feel free to contact me at ruben@maldonadotena.com or by messages in twitter <a href="https://twitter.com/_rubenmaldonado">@_rubenmaldonado</a></p><p>Don't worry, be <a href="https://rubenmaldonado.github.io/apps/pathience-app/">pathient</a>!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://RubenMaldonado.github.io/apps/pathience-app</guid><title>Pathience App</title><description>Pathience App</description><link>https://RubenMaldonado.github.io/apps/pathience-app</link><pubDate>Thu, 10 Sep 2020 20:42:00 -0500</pubDate><content:encoded><![CDATA[<h1>Pathience App</h1><h2><img src="https://RubenMaldonado.github.io/images/icon-iPad83@2x.png" alt="icon-iPad83@2x"/></h2><h2>Pathience = Path to Patience</h2><p>Pathience is an app that helps people to track important dates. Dates could be in the past or the future. Pathience will show you exactly how much time is remaining for your due date or since when you have been waiting. This app is ideal for the people that constantly try to track time, people that it's trying to create the habit of pathience and people that have specific goals in life.</p><h2><img src="https://RubenMaldonado.github.io/images/pathience-iphone-dark-list.png" alt="pathience-list"/></h2><h2><img src="https://RubenMaldonado.github.io/images/pathience-iphone-dark-action.png" alt="pathience-action"/></h2><p>In case of any issue with the app, feel free to contact me at:</p><p><a href="https://twitter.com/_rubenmaldonado">@_rubenmaldonado</a></p><p>Don't worry, be pathient!</p>]]></content:encoded></item></channel></rss>